name: Angular and Spring Boot Tests

on:
  push:
    branches:
      - main 
  pull_request:
  
jobs:
 frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: ./front

        
      - name: Run frontend tests and generate coverage
        run: npm run test -- --code-coverage --browsers=ChromeHeadless --watch=false
        working-directory: ./front

      - name: Upload frontend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: angular-results
          path: front/coverage/

      - name: Run SonarCloud analysis for Frontend
        uses: sonarsource/sonarqube-scan-action@v4
        with:
          projectBaseDir: ./front
          args: >
            -Dsonar.projectKey=angular_taigaprozz_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD 
            -Dsonar.organization=taigaprozz
            -Dsonar.sources=src
            -Dsonar.exclusions=node_modules/**,coverage/**,dist/**
            -Dsonar.tests=src
            -Dsonar.test.inclusions=src/**/*.spec.ts,src/**/*.test.ts
            -Dsonar.javascript.lcov.reportPaths=coverage/bobapp/lcov.info
            -Dsonar.qualitygate.wait=false
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


 spring-tests:
    needs: frontend-tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Run tests and generate coverage
      run: mvn clean verify
      working-directory: ./back

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: springboot-results
        path: back/target/site/jacoco

    - name: Run SonarCloud analysis for Backend
      uses: sonarsource/sonarqube-scan-action@v4
      with:
        projectBaseDir: ./back
        args: >
          -Dsonar.projectKey=back_taigaprozz_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
          -Dsonar.organization=taigaprozz
          -Dsonar.sources=src
          -Dsonar.java.binaries=target/classes
          -Dsonar.junit.reportPaths=test-classes
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
          -Dsonar.qualitygate.wait=false
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
